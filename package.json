{
  "name": "caretrack-pro",
  "version": "1.0.0",
  "description": "Care Management System - Admin Dashboard",
  "private": true,
  "workspaces": [
    "client",
    "server",
    "shared"
  ],
  "scripts": {
    "dev": "concurrently \"npm run dev:server\" \"npm run dev:client\"",
    "dev:client": "cd client && npm run dev",
    "dev:server": "cd server && npm run dev",
    "build": "npm run build:shared && npm run build:client && npm run build:server",
    "build:client": "cd client && npm run build",
    "build:server": "cd server && npm run build",
    "build:shared": "cd shared && npm run build",
    "build:analyze": "npm run build && cd client && npm run build:analyze",
    "install:all": "npm install && cd client && npm install && cd ../server && npm install && cd ../shared && npm install",
    "db:migrate": "cd server && npx prisma migrate dev",
    "db:generate": "cd server && npx prisma generate",
    "db:studio": "cd server && npx prisma studio",
    "db:seed": "cd server && npx prisma db seed",
    "db:reset": "cd server && npx prisma migrate reset --force",
    "docker:up": "docker-compose up -d postgres redis",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs postgres redis",
    "docker:logs:postgres": "docker-compose logs postgres",
    "docker:logs:redis": "docker-compose logs redis",
    "docker:clean": "docker-compose down -v",
    "setup:dev": "npm run docker:up && npm run install:all && npm run build:shared && npm run db:generate && npm run db:migrate && npm run db:seed",
    "perf:test": "cd client && npm run perf:dev && cd ../server && npm run dev",
    "lint:all": "cd client && npm run lint && cd ../server && npm run lint",
    "type-check:all": "cd client && npm run type-check && cd ../server && npm run type-check",
    "test:e2e": "playwright test tests/e2e/",
    "test:production": "jest tests/production/",
    "test:unit": "npm run test:unit:client && npm run test:unit:server",
    "test:unit:client": "cd client && npm run test",
    "test:unit:server": "cd server && npm run test",
    "test:integration": "npm run test:production",
    "validate:production": "node scripts/production-validation.js",
    "security:scan": "node scripts/security-scan.js",
    "performance:benchmark": "node scripts/performance-benchmark.js"
  },
  "devDependencies": {
    "@playwright/test": "^1.45.0",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.10.5",
    "axios": "^1.6.7",
    "concurrently": "^8.2.2",
    "eslint": "^8.55.0",
    "jest": "^29.7.0",
    "prettier": "^3.1.0",
    "typescript": "^5.3.3"
  },
  "dependencies": {
    "claude-flow": "^2.0.0-alpha.88"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "performance": {
    "optimizations": {
      "bundleSplitting": true,
      "lazyLoading": true,
      "memoization": true,
      "databaseCaching": true,
      "apiCaching": true,
      "memoryLeakPrevention": true
    },
    "monitoring": {
      "performanceLogger": true,
      "memoryTracking": true,
      "errorTracking": true,
      "apiMetrics": true
    }
  },
  "testing": {
    "e2e": {
      "framework": "playwright",
      "browsers": ["chromium", "firefox", "webkit"],
      "coverage": true
    },
    "unit": {
      "framework": "jest",
      "coverage": {
        "threshold": 80
      }
    },
    "integration": {
      "database": true,
      "api": true,
      "security": true
    }
  }
}